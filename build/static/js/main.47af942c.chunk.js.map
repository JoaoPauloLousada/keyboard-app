{"version":3,"sources":["components/keyboard/types.ts","components/keyboard/key.tsx","components/keyboard/keysData.ts","components/keyboard/keys.tsx","components/keyboard/index.tsx","App.tsx","index.tsx"],"names":["KeyColor","KeyType","Key","value","tone","color","WHITE","play","stop","KeyWrapper","onMouseDown","onMouseUp","styled","li","css","BLACK","A","B","D","E","G","includes","keysData","C","F","keys","Wrapper","map","key","ul","Keyboard","useState","pianoSound","setPianoSound","playFn","useCallback","stopFn","useEffect","Soundfont","instrument","AudioContext","then","piano","section","App","className","GlobalStyle","div","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47af942c.chunk.js","sourcesContent":["export enum KeyColor {\n  WHITE = 'WHITE',\n  BLACK = 'BLACK'\n}\n\nexport enum KeyType {\n  A = 'A',\n  'A#' = 'A#',\n  B = 'B',\n  C = 'C',\n  'C#' = 'C#',\n  D = 'D',\n  'D#' = 'D#',\n  E = 'E',\n  F = 'F',\n  'F#' = 'F#',\n  G = 'G',\n  'G#' = 'G#',\n}\n\nexport type KeyData = {\n  value: string,\n  color: KeyColor\n  tone: KeyType\n}","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { KeyColor, KeyType } from './types'\n\ntype Props = {\n  color?: KeyColor\n  play?: Function\n  stop?: Function\n  value: string\n  tone: KeyType\n}\n\nconst Key: React.FC<Props> = ({\n  value,\n  tone,\n  color = KeyColor.WHITE,\n  play = () => {},\n  stop = () => {}\n}: Props) => {\n  return (\n    <KeyWrapper\n      color={color}\n      tone={tone} \n      onMouseDown={() => play(value)}\n      onMouseUp={() => stop()}\n    />\n  )\n}\n\nexport default Key\n\ntype KeyWrapperProps = {\n  color?: KeyColor\n  play?: Function\n  tone: KeyType\n}\nconst KeyWrapper= styled.li<KeyWrapperProps>`\n  margin:0;\n  padding:0;\n  list-style:none;\n  position:relative;\n  float:left;\n  &:first-child {\n    margin-left: 0;\n  }\n\n  ${({color}) => color === KeyColor.WHITE && css`\n  height:16em;\n  width:4em;\n  z-index:1;\n  border-left:1px solid #bbb;\n  border-bottom:1px solid #bbb;\n  border-radius:0 0 5px 5px;\n  box-shadow:-1px 0 0 rgba(255,255,255,0.8) inset,0 0 5px #ccc inset,0 0 3px rgba(0,0,0,0.2);\n  background:linear-gradient(to bottom,#eee 0%,#fff 100%);\n\n  &:active {\n    border-top:1px solid #777;\n    border-left:1px solid #999;\n    border-bottom:1px solid #999;\n    box-shadow:2px 0 3px rgba(0,0,0,0.1) inset,-5px 5px 20px rgba(0,0,0,0.2) inset,0 0 3px rgba(0,0,0,0.2);\n    background:linear-gradient(to bottom,#fff 0%,#e9e9e9 100%)\n  }`}\n  \n  ${({color}) => color === KeyColor.BLACK && css`\n    height:8em;\n    width:2em;\n    margin:0 0 0 -1em;\n    z-index:2;\n    border:1px solid #000;\n    border-radius:0 0 3px 3px;\n    box-shadow:-1px -1px 2px rgba(255,255,255,0.2) inset,0 -5px 2px 3px rgba(0,0,0,0.6) inset,0 2px 4px rgba(0,0,0,0.5);\n    background:linear-gradient(45deg,#222 0%,#555 100%);\n    &:active {\n      box-shadow:-1px -1px 2px rgba(255,255,255,0.2) inset,0 -2px 2px 3px rgba(0,0,0,0.6) inset,0 1px 2px rgba(0,0,0,0.5);\n      background:linear-gradient(to right,#444 0%,#222 100%)\n  }`}\n\n  ${({tone}) => [\n    KeyType.A,\n    KeyType.B,\n    KeyType.D,\n    KeyType.E,\n    KeyType.G].includes(tone) && css`\n      margin-left: -1em;\n  `}\n`","import { KeyType, KeyColor, KeyData } from './types';\n\nconst keysData: KeyData[] = [\n  {\n    tone: KeyType.C,\n    value: 'C3',\n    color: KeyColor.WHITE,\n  },\n  {\n    tone: KeyType['C#'],\n    color: KeyColor.BLACK,\n    value: 'C#3',\n  },\n  {\n    tone: KeyType.D,\n    color: KeyColor.WHITE,\n    value: 'D3',\n  },\n  {\n    tone: KeyType['D#'],\n    color: KeyColor.BLACK,\n    value: 'D#3',\n  },\n  {\n    tone: KeyType.E,\n    color: KeyColor.WHITE,\n    value: 'E3',\n  },\n  {\n    tone: KeyType.F,\n    color: KeyColor.WHITE,\n    value: 'F3',\n  },\n  {\n    tone: KeyType['F#'],\n    color: KeyColor.BLACK,\n    value: 'F#3',\n  },\n  {\n    tone: KeyType.G,\n    color: KeyColor.WHITE,\n    value: 'G3',\n  },\n  {\n    tone: KeyType['G#'],\n    color: KeyColor.BLACK,\n    value: 'G#3',\n  },\n  {\n    tone: KeyType.A,\n    color: KeyColor.WHITE,\n    value: 'A3',\n  },\n  {\n    tone: KeyType['A#'],\n    color: KeyColor.BLACK,\n    value: 'A#3',\n  },\n  {\n    tone: KeyType.B,\n    color: KeyColor.WHITE,\n    value: 'B3',\n  },\n  {\n    tone: KeyType.C,\n    color: KeyColor.WHITE,\n    value: 'C4',\n  },\n  {\n    tone: KeyType['C#'],\n    color: KeyColor.BLACK,\n    value: 'C#4',\n  },\n  {\n    tone: KeyType.D,\n    color: KeyColor.WHITE,\n    value: 'D4',\n  },\n  {\n    tone: KeyType['D#'],\n    color: KeyColor.BLACK,\n    value: 'D#4',\n  },\n  {\n    tone: KeyType.E,\n    color: KeyColor.WHITE,\n    value: 'E4',\n  },\n  {\n    tone: KeyType.F,\n    color: KeyColor.WHITE,\n    value: 'F4',\n  },\n  {\n    tone: KeyType['F#'],\n    color: KeyColor.BLACK,\n    value: 'F#4',\n  },\n  {\n    tone: KeyType.G,\n    color: KeyColor.WHITE,\n    value: 'G4',\n  },\n  {\n    tone: KeyType['G#'],\n    color: KeyColor.BLACK,\n    value: 'G#4',\n  },\n  {\n    tone: KeyType.A,\n    color: KeyColor.WHITE,\n    value: 'A4',\n  },\n  {\n    tone: KeyType['A#'],\n    color: KeyColor.BLACK,\n    value: 'A#4',\n  },\n  {\n    tone: KeyType.B,\n    color: KeyColor.WHITE,\n    value: 'B4',\n  },\n  {\n    tone: KeyType.C,\n    color: KeyColor.WHITE,\n    value: 'C5',\n  },\n]\n\nexport default keysData","import React from 'react'\nimport styled from 'styled-components'\nimport Key from './key'\nimport keysData from './keysData'\n\ntype Props = {\n  play: Function,\n  stop: Function\n}\n\nconst keys = ({ play, stop }: Props) => {\n  return (\n    <Wrapper>\n      {keysData.map(key => \n        <Key\n          tone={key.tone}\n          value={key.value}\n          color={key.color}\n          play={play}\n          stop={stop}\n          key={key.value}\n        />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default keys\n\nconst Wrapper = styled.ul`\n  height: 100%;\n  position:relative;\n  padding: 0;\n  margin: 0;\n  display: flex;\n  justify-content: center;\n  li:first-child {\n    border-radius:5px 0 5px 5px\n  }\n\n  li:last-child {\n    border-radius:0 5px 5px 5px\n  }\n`","import React, { useCallback, useEffect, useState } from 'react'\nimport Soundfont from 'soundfont-player';\nimport styled from 'styled-components'\nimport Keys from './keys'\n\nconst Keyboard = () => {\n  const [pianoSound, setPianoSound] = useState<any>(null)\n  const playFn = useCallback((key: string) => {\n    pianoSound.play(key)\n  },[pianoSound])\n\n  const stopFn = useCallback((key: string) => {\n    pianoSound.stop()\n  },[pianoSound])\n\n  useEffect(() => {\n    Soundfont.instrument(new AudioContext(), 'acoustic_grand_piano').then(function (piano) {\n      setPianoSound(piano)\n    })\n  }, [])\n  return (\n    <Wrapper>\n      <Keys play={playFn} stop={stopFn}/>\n    </Wrapper>\n  )\n}\n\nexport default Keyboard\n\nconst Wrapper = styled.section`\n  width: 100%;\n  max-width: 1080px;\n  height:18.875em;\n  margin:5em auto;\n  padding:3em 3em 0 3em;\n  position:relative;\n  border:1px solid #160801;\n  border-radius:1em;\n  background:linear-gradient(to bottom right,rgba(0,0,0,0.3),rgba(0,0,0,0)), url(/keyboard-app/build/vwood.png);\n  box-shadow:0 0 50px rgba(0,0,0,0.5) inset,0 1px rgba(212,152,125,0.2) inset,0 5px 15px rgba(0,0,0,0.5)\n`\n","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components'\nimport Keyboard from './components/keyboard';\n\nfunction App() {\n  return (\n    <>\n      <Wrapper className=\"App\">\n        <Keyboard />\n      </Wrapper>\n      <GlobalStyle/>\n    </>\n  );\n}\n\nexport default App;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  width: 100vw;\n  background:#222;\n  margin: 0;\n  padding: 0;\n`\nconst GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing:border-box\n  }\n  body {\n    margin: 0;\n    padding: 0;\n  }\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// reportWebVitals();\n"],"sourceRoot":""}